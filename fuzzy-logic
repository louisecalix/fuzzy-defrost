import numpy as np
import matplotlib.pyplot as plt

# membership func
def frost_buildup_membership(frost_buildup):
    if frost_buildup < 2:
        return 'Thin'
    elif 2 <= frost_buildup <= 5:
        return 'Medium'
    else:
        return 'Thick'

def temp_inside_membership(temp):
    if temp <= -18:
        return 'Very Cold'
    elif -18 < temp <= -10:
        return 'Cold'
    else:
        return 'Moderate'

def door_opening_membership(freq):
    if freq < 5:
        return 'Rarely'
    elif 5 <= freq <= 7:
        return 'Occasionally'
    else:
        return 'Frequently'

def temp_outside_membership(temp_outside):
    if temp_outside < 20:
        return 'Cold'
    elif 20 <= temp_outside <= 30:
        return 'Moderate'
    else:
        return 'Warm'

# evaluate input
def fuzzify(frost_buildup, temp_inside, door_opening_freq, temp_outside):
    frost = frost_buildup_membership(frost_buildup)
    temp_in = temp_inside_membership(temp_inside)
    door_freq = door_opening_membership(door_opening_freq)
    temp_out = temp_outside_membership(temp_outside)
    return frost, temp_in, door_freq, temp_out

# rules

def infer_defrost_cycle(frost, temp_in, door_freq, temp_out):
    
    if frost == 'Thin' and temp_in == 'Very Cold' and door_freq == 'Rarely' and temp_out == 'Cold':
        return 'No Defrost'
    if frost == 'Thin' and temp_in == 'Very Cold' and door_freq == 'Occasionally' and temp_out == 'Moderate':
        return 'No Defrost'
    if frost == 'Medium' and temp_in == 'Cold' and door_freq == 'Occasionally' and temp_out == 'Moderate':
        return 'Short Defrost Cycle'
    if frost == 'Medium' and temp_in == 'Cold' and door_freq == 'Frequently' and temp_out == 'Moderate':
        return 'Long Defrost Cycle'
    if frost == 'Thick' and temp_in == 'Cold' and door_freq == 'Occasionally' and temp_out == 'Warm':
        return 'Long Defrost Cycle'
    if frost == 'Thick' and temp_in == 'Moderate' and door_freq == 'Frequently' and temp_out == 'Warm':
        return 'Long Defrost Cycle'
    if frost == 'Thick' and temp_in == 'Moderate' and door_freq == 'Frequently' and temp_out == 'Moderate':
        return 'Long Defrost Cycle'
    if frost == 'Medium' and temp_in == 'Cold' and door_freq == 'Rarely' and temp_out == 'Cold':
        return 'Short Defrost Cycle'
    if frost == 'Thin' and temp_in == 'Cold' and door_freq == 'Frequently' and temp_out == 'Moderate':
        return 'No Defrost'
    if frost == 'Thick' and temp_in == 'Cold' and door_freq == 'Rarely' and temp_out == 'Warm':
        return 'Long Defrost Cycle'
        

frost_buildup = 4

temp_inside = -10
door_opening_freq = 6
temp_outside = 25


frost, temp_in, door_freq, temp_out = fuzzify(frost_buildup, temp_inside, door_opening_freq, temp_outside)


defrost_cycle = infer_defrost_cycle(frost, temp_in, door_freq, temp_out)

print(f"Defrost Cycle: {defrost_cycle}")